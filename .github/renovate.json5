{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "local>volschin/renovate-config",
    // "docker:pinDigests",
    "replacements:k8s-registry-move",
    "replacements:containerbase",
    "github>onedr0p/home-ops//.github/renovate/grafanaDashboards.json5"
  ],
//  "baseBranches": ["!/^renovate\\/.*/"],
  "flux": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"]
  },
  "helm-values": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"]
  },
  "helmfile": {
    "fileMatch": ["(^|/)helmfile\\.ya?ml(?:\\.j2)?$"]
  },
  "kubernetes": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"]
  },
  "kustomize": {
    "fileMatch": ["(^|/)kustomization\\.ya?ml(?:\\.j2)?$"]
  },
  "pip_requirements": {
    "fileMatch": ["(^|/)[\\w-]*requirements(-\\w+)?\\.(txt|pip)(?:\\.j2)?$"]
  },
  // package rules
  "packageRules": [
    // automerge
    {
      "description": "Auto merge Github Actions",
      "matchManagers": ["github-actions"],
      "automerge": true,
      "automergeType": "branch",
      "automergeSchedule": [ "before 7am on Monday" ],
      "ignoreTests": true,
      "matchUpdateTypes": ["minor", "patch", "digest"]
    },
    {
      "description": "Auto-merge container digests and patch updates for trusted containers",
      "matchDatasources": ["docker"],
      "automerge": true,
      "automergeType": "branch",
      "matchUpdateTypes": ["patch", "digest"],
      "matchPackagePatterns": ["ghcr.io/bjw-s", "ghcr.io/onedr0p", "ghcr.io/volschin"]
    },
    // groups
    {
      "description": ["Flux Group"],
      "groupName": "Flux",
      "matchPackagePatterns": ["fluxcd"],
      "matchDatasources": ["docker", "github-tags"],
      "versioning": "semver",
      "minimumReleaseAge": "3 days",
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": ["Talos Group"],
      "groupName": "Talos",
      "matchPackagePatterns": [
        "siderolabs/talosctl",
        "siderolabs/installer"
      ],
      "matchDatasources": ["docker"],
      "minimumReleaseAge": "3 days",
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": ["Actions Runner Group"],
      "groupName": "Actions Runner",
      "matchPackagePatterns": [
        "gha-runner-scale-set-controller",
        "gha-runner-scale-set"
      ],
      "matchDatasources": ["docker", "helm"],
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": ["Dragonfly Group"],
      "groupName": "Dragonfly",
      "matchPackagePatterns": ["dragonfly(?:db)?.operator"],
      "matchDatasources": ["docker", "github-releases"],
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": ["Intel Device Plugins Group"],
      "groupName": "Intel-Device-Plugins",
      "matchPackagePatterns": ["intel-device-plugins"],
      "matchDatasources": ["helm"],
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    {
      "description": ["Volsync Group"],
      "groupName": "Volsync",
      "matchPackagePatterns": ["volsync"],
      "matchDatasources": ["docker", "helm"],
      "matchUpdateTypes": ["minor", "patch"],
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      }
    },
    // commit message topics
    {
      "matchDatasources": ["helm"],
      "commitMessageTopic": "chart {{depName}}",
      "commitMessageExtra": " ( {{currentVersion}} → {{newVersion}} )"
    },
    {
      "matchDatasources": ["docker"],
      "commitMessageTopic": "image {{depName}}",
      "commitMessageExtra": " ( {{currentVersion}} → {{newVersion}} )"
    },
    // commit messages
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "minimumReleaseAge": "3 days",
      "commitMessagePrefix": "feat(container)!: "
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["digest"],
      "semanticCommitType": "chore",
      "semanticCommitScope": "container",
      "commitMessageExtra": "( {{currentDigestShort}} → {{newDigestShort}} )"
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(helm)!: "
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "helm"
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "helm"
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(github-release)!: "
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "github-release"
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "github-release"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(github-action)!: "
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "github-action"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "github-action"
    },
    // labels
    {
      "matchUpdateTypes": ["major"],
      "labels": ["type/major"]
    },
    {
      "matchUpdateTypes": ["minor"],
      "labels": ["type/minor"]
    },
    {
      "matchUpdateTypes": ["patch"],
      "labels": ["type/patch"]
    },
    {
      "matchDatasources": ["docker"],
      "addLabels": ["renovate/container"]
    },
    {
      "matchDatasources": ["helm"],
      "addLabels": ["renovate/helm"]
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "addLabels": ["renovate/github-release"]
    },
    {
      "matchManagers": ["github-actions"],
      "addLabels": ["renovate/github-action"]
    },
    {
      "matchManagers": ["pre-commit"],
      "addLabels": ["renovate/pre-commit"]
    }
  ],
  // custom managers
  "customManagers": [
    {
      "customType": "regex",
      "description": ["Process custom dependencies"],
      "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"],
      "matchStrings": [
        // # renovate: datasource=helm depName=cilium repository=https://helm.cilium.io
        // version: 1.15.1
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( repository=(?<registryUrl>\\S+))?\\n.+: (&\\S+\\s)?(?<currentValue>\\S+)",
        // # renovate: depName=rancher/system-upgrade-controller datasource=github-releases
        // https://github.com/rancher/system-upgrade-controller/releases/download/v0.13.2/crd.yaml
        "depName=(?<depName>\\S+) datasource=(?<datasource>\\S+)\\n.+/(?<currentValue>(v|\\d)[^/]+)"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}"
    }
  ]
}
