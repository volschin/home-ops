---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app zwave
spec:
  interval: 60m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage
  values:
    controllers:
      zwave:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zwave-js/zwave-js-ui
              tag: 9.27.5@sha256:82e230d863b8504494770f5f28c8f69d3ea9bdfe221fc379af25f11cee9a4330
            env:
              TZ: ${TIMEZONE}
              NETWORK_KEY: ${ZWAVE_NETWORK_KEY}
              PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/zwave
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    defaultPodOptions:
      nodeSelector:
        aeotec.feature.node.kubernetes.io/zwave: "true" # TODO: check this for uzb-1
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          websocket:
            port: 3000
    serviceMonitor:
      app:
        serviceName: *app
        enabled: true # requires https://github.com/kvaster/zwavejs-prom
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home Automation
          gethomepage.dev/name: Z-Wave UI
          gethomepage.dev/icon: zwavejs2mqtt.png
          gethomepage.dev/id: "{{ .Release.Name }}"
          gethomepage.dev/description: Z-Wave Schloss
          gethomepage.dev/weight: "2"
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: zwave
        globalMounts:
          - path: /usr/src/app/store
      usb:
        # Z-Wave UZB-1 home-id e5e8f5b9
        # - /dev/serial/by-id/usb-0658_0200-if00:/dev/ttyACM0
        type: hostPath
        hostPath: /dev/serial/by-id/usb-0658_0200-if00
        hostPathType: CharDevice
        globalMounts:
          - path: /dev/serial/by-id/usb-0658_0200-if00
      tmp:
        type: emptyDir
