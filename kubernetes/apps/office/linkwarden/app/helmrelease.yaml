---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app linkwarden
spec:
  interval: 60m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      linkwarden:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/volschin/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: linkwarden-secret
        containers:
          app:
            image:
              repository: ghcr.io/linkwarden/linkwarden
              pullPolicy: IfNotPresent
              tag: v2.8.3@sha256:7f80a03d688c3e5d9ec6b34f5b65cd861ff8c9eb08d12932dc8fc7482991f238
            env:
              TIMEZONE: ${TIMEZONE}
              NEXTAUTH_URL: "https://link.${SECRET_DOMAIN}"
              NEXT_PUBLIC_DISABLE_REGISTRATION: true
              NEXT_PUBLIC_CREDENTIALS_ENABLED: false
              DISABLE_NEW_SSO_USERS: false
              STORAGE_FOLDER: "config" # Will always end up as /data/STOREAGE_FOLDER so eg /data/config
              HOME: /data/config
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 1Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 3000
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Projekte
          gethomepage.dev/name: Linkwarden
          gethomepage.dev/icon: linkwarden.svg
          gethomepage.dev/id: "{{ .Release.Name }}"
          gethomepage.dev/description: collaborative bookmark manager
        hosts:
          - host: &host "link.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        globalMounts:
          - path: /data/config
        existingClaim: linkwarden-data
      tmp:
        type: emptyDir
