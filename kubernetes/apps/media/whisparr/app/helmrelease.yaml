---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app whisparr
spec:
  interval: 60m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/volschin/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
        containers:
          app:
            image:
              repository: docker.io/hotio/whisparr
              tag: v3-3.0.0.545@sha256:fc6a6b8435756484035205282d8ed57899e9c9033459728cfa8be8a9676f0641
            env:
              WHISPARR__APP__INSTANCENAME: Whisparr
              WHISPARR__APP__THEME: dark
              WHISPARR__AUTH__METHOD: External
              WHISPARR__AUTH__REQUIRED: DisabledForLocalAddresses
              WHISPARR__LOG__DBENABLED: "False"
              WHISPARR__LOG__LEVEL: info
              WHISPARR__SERVER__PORT: &port 80
              WHISPARR__UPDATE__BRANCH: develop
              TZ: ${TIMEZONE}
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Whisparr
          gethomepage.dev/icon: whisparr.svg
          gethomepage.dev/description: Adult Management
          gethomepage.dev/widget.type: whisparr
          gethomepage.dev/widget.url: http://whisparr.media
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_WHISPARR_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</body>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/whisparr/nord.css"></body>;
            sub_filter_once on;
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: config-whisparr
      tmp:
        type: emptyDir
      media:
        enabled: true
        existingClaim: media-library
