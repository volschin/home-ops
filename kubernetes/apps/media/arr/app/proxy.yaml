---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: arr
  namespace: media
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Downloads
    gethomepage.dev/name: Prowlarr
    gethomepage.dev/icon: prowlarr.svg
    gethomepage.dev/description: Torrent Indexer Management
    gethomepage.dev/widget.type: prowlarr
    gethomepage.dev/widget.url: http://arr.media/prowlarr/
    gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PROWLARR_TOKEN}}` }}"
    external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
spec:
  ingressClassName: internal
  rules:
  - host: "arr.${SECRET_DOMAIN}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: arr
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: arr
  namespace: media
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      name: http
---
apiVersion: v1
kind: Endpoints
metadata:
  name: arr # Must be equal to Service name for automatic mapping
  namespace: media
subsets:
- addresses:
  - ip: 192.168.2.132 # IP address of your external service that you would like to proxy requests to
  ports:
  - port: 89
